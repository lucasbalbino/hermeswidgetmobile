package br.ufg.inf.mestrado.hermeswidget.ontologies;


import com.hp.hpl.jena.ontology.*;
import com.hp.hpl.jena.rdf.model.*;

/* CVS $Id: $ */
 

 
/**
 * Vocabulary definitions from √Årea de Trabalho/wgs84_pos.rdf 
 * @author Auto-generated by schemagen on 14 fev 2018 16:47 
 */
public class WGS84_POS {
    /** <p>The ontology model that holds the vocabulary terms</p> */
    private static final OntModel M_MODEL = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.w3.org/2002/07/owl#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     * @return namespace as String
     * @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = M_MODEL.createResource( NS );
    
    /** <p>The relation between something and the point, or other geometrical thing in 
     *  space, where it is. For example, the realtionship between a radio tower and 
     *  a Point with a given lat and long. Or a relationship between a park and its 
     *  outline as a closed arc of points, or a road and its location as a arc (a 
     *  sequence of points). Clearly in practice there will be limit to the accuracy 
     *  of any such statement, but one would expect an accuracy appropriate for the 
     *  size of the object and uses such as mapping .</p>
     */
    public static final ObjectProperty location = M_MODEL.createObjectProperty( "http://www.w3.org/2003/01/geo/wgs84_pos#location" );
    
    public static final AnnotationProperty date = M_MODEL.createAnnotationProperty( "http://purl.org/dc/elements/1.1/date" );
    
    public static final AnnotationProperty description = M_MODEL.createAnnotationProperty( "http://purl.org/dc/elements/1.1/description" );
    
    public static final AnnotationProperty title = M_MODEL.createAnnotationProperty( "http://purl.org/dc/elements/1.1/title" );
    
    /** <p>The WGS84 altitude of a SpatialThing (decimal meters above the local reference 
     *  ellipsoid).</p>
     */
    public static final AnnotationProperty alt = M_MODEL.createAnnotationProperty( "http://www.w3.org/2003/01/geo/wgs84_pos#alt" );
    
    /** <p>The WGS84 latitude of a SpatialThing (decimal degrees).</p> */
    public static final AnnotationProperty lat = M_MODEL.createAnnotationProperty( "http://www.w3.org/2003/01/geo/wgs84_pos#lat" );
    
    /** <p>The WGS84 longitude of a SpatialThing (decimal degrees).</p> */
    public static final AnnotationProperty long_ = M_MODEL.createAnnotationProperty( "http://www.w3.org/2003/01/geo/wgs84_pos#long" );
    
    public static final AnnotationProperty based_near = M_MODEL.createAnnotationProperty( "http://xmlns.com/foaf/0.1/based_near" );
    
    /** <p>A point, typically described using a coordinate system relative to Earth, 
     *  such as WGS84.Uniquely identified by lat/long/alt. i.e. spaciallyIntersects(P1, 
     *  P2) :- lat(P1, LAT), long(P1, LONG), alt(P1, ALT), lat(P2, LAT), long(P2, 
     *  LONG), alt(P2, ALT). sameThing(P1, P2) :- type(P1, Point), type(P2, Point), 
     *  spaciallyIntersects(P1, P2).</p>
     */
    public static final OntClass Point = M_MODEL.createClass( "http://www.w3.org/2003/01/geo/wgs84_pos#Point" );
    
    /** <p>Anything with spatial extent, i.e. size, shape, or position. e.g. people, 
     *  places, bowling balls, as well as abstract areas like cubes.</p>
     */
    public static final OntClass SpatialThing = M_MODEL.createClass( "http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing" );
    
}
