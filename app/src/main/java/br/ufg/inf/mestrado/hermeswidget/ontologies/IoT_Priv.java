package br.ufg.inf.mestrado.hermeswidget.ontologies;
/* CVS $Id: $ */
 
import com.hp.hpl.jena.ontology.*;
import com.hp.hpl.jena.rdf.model.*;
/**
 * Vocabulary definitions from √Årea de Trabalho/iot.owl 
 * @author Auto-generated by schemagen on 14 fev 2018 19:59 
 */
public class IoT_Priv {
    /** <p>The ontology model that holds the vocabulary terms</p> */
    private static final OntModel M_MODEL = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://example.org/ontology/iot-priv#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     * @return namespace as String
     * @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = M_MODEL.createResource( NS );
    
    /** <p>The ontology's owl:versionInfo as a string</p> */
    public static final String VERSION_INFO = "1.0";
    
    public static final ObjectProperty AccessPurposeDenied = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#AccessPurposeDenied" );
    
    public static final ObjectProperty accessPurposeAllowed = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#accessPurposeAllowed" );
    
    public static final ObjectProperty consumes = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#consumes" );
    
    public static final ObjectProperty criptographyOnStorage = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#criptographyOnStorage" );
    
    public static final ObjectProperty currentLocation = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#currentLocation" );
    
    public static final ObjectProperty deleteDataAfter = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#deleteDataAfter" );
    
    public static final ObjectProperty hasBlackList = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#hasBlackList" );
    
    public static final ObjectProperty hasDataCollectionMethod = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#hasDataCollectionMethod" );
    
    public static final ObjectProperty hasObligations = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#hasObligations" );
    
    public static final ObjectProperty hasPrivacyPolicy = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#hasPrivacyPolicy" );
    
    public static final ObjectProperty isProtectedBy = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#isProtectedBy" );
    
    public static final ObjectProperty protects = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#protects" );
    
    public static final ObjectProperty requestInstant = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#requestInstant" );
    
    public static final ObjectProperty retentionPeriod = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#retentionPeriod" );
    
    public static final ObjectProperty useAnonymizationTechnique = M_MODEL.createObjectProperty( "http://example.org/ontology/iot-priv#useAnonymizationTechnique" );
    
    public static final DatatypeProperty anonymizationLevel = M_MODEL.createDatatypeProperty( "http://example.org/ontology/iot-priv#anonymizationLevel" );
    
    public static final DatatypeProperty isPersonalyIdentifiable = M_MODEL.createDatatypeProperty( "http://example.org/ontology/iot-priv#isPersonalyIdentifiable" );
    
    public static final DatatypeProperty privateDataCanBeUpdated = M_MODEL.createDatatypeProperty( "http://example.org/ontology/iot-priv#privateDataCanBeUpdated" );
    
    public static final DatatypeProperty requestConsumerLog = M_MODEL.createDatatypeProperty( "http://example.org/ontology/iot-priv#requestConsumerLog" );
    
    public static final DatatypeProperty safeAnswers = M_MODEL.createDatatypeProperty( "http://example.org/ontology/iot-priv#safeAnswers" );
    
    public static final OntClass AccessPurpose = M_MODEL.createClass( "http://example.org/ontology/iot-priv#AccessPurpose" );
    
    public static final OntClass AnonymizationTechniques = M_MODEL.createClass( "http://example.org/ontology/iot-priv#AnonymizationTechniques" );
    
    public static final OntClass CriptographyTechniques = M_MODEL.createClass( "http://example.org/ontology/iot-priv#CriptographyTechniques" );
    
    public static final OntClass DataCollectionMethod = M_MODEL.createClass( "http://example.org/ontology/iot-priv#DataCollectionMethod" );
    
    public static final OntClass DataOwner = M_MODEL.createClass( "http://example.org/ontology/iot-priv#DataOwner" );
    
    public static final OntClass GeneralPrivacyPolicy = M_MODEL.createClass( "http://example.org/ontology/iot-priv#GeneralPrivacyPolicy" );
    
    public static final OntClass Obligations = M_MODEL.createClass( "http://example.org/ontology/iot-priv#Obligations" );
    
    public static final OntClass PrivacyPolicy = M_MODEL.createClass( "http://example.org/ontology/iot-priv#PrivacyPolicy" );
    
    public static final OntClass Recipient = M_MODEL.createClass( "http://example.org/ontology/iot-priv#Recipient" );
    
    public static final OntClass StoragePrivacyPolicy = M_MODEL.createClass( "http://example.org/ontology/iot-priv#StoragePrivacyPolicy" );
    
}
